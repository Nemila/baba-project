generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Specialist {
    id         Int   @id @default(autoincrement())
    experience Int
    rating     Float @default(0)

    userId      String  @unique
    speciality  String
    fullName    String
    description String?

    isFeatured Boolean @default(false)

    location    Json?
    socialLinks Json?

    appoitments Appointment[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum AppointmentStatus {
    scheduled
    confirmed
    completed
    cancelled
}

enum AppointmentType {
    in_person
    teleconsultation
}

model Appointment {
    id Int @id @default(autoincrement())

    patientName       String
    patientClerkId    String
    specialistClerkId String
    meetingLink       String?

    status AppointmentStatus @default(scheduled)
    type   AppointmentType

    meetingDate DateTime
    meetingTime String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    specialist   Specialist @relation(fields: [specialistId], references: [id], onDelete: Cascade)
    specialistId Int

    @@unique([specialistClerkId, patientClerkId, meetingDate])
}

model Disease {
    id           Int       @id @default(autoincrement())
    name         String    @unique
    description  String
    causes       String
    transmission String
    prevention   String
    treatment    String
    symptoms     Symptom[]
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
}

model Symptom {
    id          Int       @id @default(autoincrement())
    name        String    @unique
    description String
    diseases    Disease[]
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

enum FacilityType {
    hospital
    clinic
    pharmacy
}

model Facilities {
    id        Int          @id @default(autoincrement())
    name      String
    address   String
    contact   String
    location  Json
    type      FacilityType
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt
}

enum Genre {
    MASCULIN
    FEMININ
}

model MedicalDetails {
    id             Int       @id @default(autoincrement())
    patientClerkId String    @unique
    patientName    String?
    phoneNumber    String?
    dateOfBirth    DateTime?
    genre          Genre?
    bloodGroup     String?

    hasAllergies         Boolean?
    allergies            String?
    hasChronicConditions Boolean?
    chronicConditions    String?

    isSmoker       Boolean?
    isDrinker      Boolean?
    isSportman     Boolean?
    wasHopitalized Boolean?
}
