generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Specialist {
    id           Int           @id @default(autoincrement())
    experience   Int
    userId       String        @unique
    speciality   String
    description  String?
    rating       Float         @default(0)
    appointments Appointment[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
}

enum AppointmentStatus {
    scheduled
    completed
    cancelled
}

enum AppointmentType {
    in_person
    teleconsultation
}

model Appointment {
    id              Int               @id @default(autoincrement())
    userId          String
    specialist      Specialist        @relation(fields: [specialistId], references: [id], onDelete: Cascade)
    specialistId    Int
    appointmentDate DateTime
    status          AppointmentStatus @default(scheduled)
    type            AppointmentType
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
}

model Disease {
    id           Int       @id @default(autoincrement())
    name         String    @unique
    description  String
    causes       String
    transmission String
    prevention   String
    treatment    String
    symptoms     Symptom[]
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
}

model Symptom {
    id          Int       @id @default(autoincrement())
    name        String    @unique
    description String
    diseases    Disease[]
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

enum FacilityType {
    hospital
    clinic
    pharmacy
}

model Facilities {
    id        Int          @id @default(autoincrement())
    name      String
    address   String
    contact   String
    location  Json
    type      FacilityType
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt
}
